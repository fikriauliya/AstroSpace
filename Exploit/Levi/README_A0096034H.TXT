========== MD5 Checksum ==========
I am on International flight on Sunday morning, 16 March and may not be able to update this to include the latest MD5. So, I submit my file first, if later possible to get Internet connection, I will update the MD5. Otherwise, could just assume my MD5 is the same as my teammates'

========== List of secret information ==========

1) Database 
ID: student
Password: student

2) User accounts => password:
user0@email.com => passw0rd (admin)
user1@email.com => passw0rd (admin)
user2@email.com => passw0rd
user3@email.com => passw0rd
user4@email.com => passw0rd
user5@email.com => passw0rd
user6@email.com => passw0rd
user7@email.com => passw0rd
user8@email.com => passw0rd
student@student.com => student (admin)

========== Class of Vulnerability: CSRF with no token (13) ==========
* Goal: Attract the user to another website to click a link which change the user theme without his acknowledgement
* Exploit verification: the target user's theme is changed to "Cupid"
* The exploit is automatable
* Exploit steps:

Attacker:
1) Go to Log in:
username: user4@email.com
password: passw0rd
2) Go to Home > Memberlist,
3) Click the user name you want to attack
4) Now the URL should be something like: https://localhost/spaces/6
The last part is the user ID, copy that part
5) Construct URL:
https://astrospace-attack.herokuapp.com/attacks/no_csrf/<id>/ip=https:%2f%2f192.168.0.124
Replace the <id> with the user ID we just copied
The last part is the IP of the Astrospace server. If the IP change, please change that part as well.
6) Send the URL to the target user, suggest him to click that.

Victim:
1) Log in
2) Open the URL sent by the attacker, click the button
3) The page will be redirected, and the themes is changed

* Specify how to run attack automation tool:
The automation is done by sending the Web application URL as bait (URL below)

* Set up a malicious web application as a bait (if applicable)
https://astrospace-attack.herokuapp.com/attacks/no_csrf/<id>/ip=https:%2f%2f192.168.0.124
The source code of that URL is attached in ATTACK_A0096034H.ZIP/attack_script

========== Class of Vulnerability: Clickjacking (22) ========
* Goal: Attract user to click a link, which silently post a blogpost to the user's wall
* Exploit verification: new blogpost is posted without user's concern
* The exploit is automatable
* Exploit steps: 

Attacker:
1) Go to Log in:
username: user4@email.com
password: passw0rd
2) Go to Home > Manage Ads > Publish New Ads
3) Fill in the detail as follow:
Title: anything
URL: https://astrospace-attack.herokuapp.com/attacks/clickjacking/ip=https:%2f%2f192.168.0.124
The last part is the IP of the Astrospace server. If the IP change, please change that part as well.
Budget: 1000
Description: anything

Victim:
1) Log in
2) Go to Home, and check the ads below the page. It displays "weight loss" advertisement.
3) Click the link in the advertisement
4) Go to Home, you should see a new blog post added (titled "Hijacked")

* Specify how to run attack automation tool:
The automation is done by sending the Web application URL as bait (URL below)

* Set up a malicious web application as a bait (if applicable)
The website is hosted here:  https://astrospace-attack.herokuapp.com/attacks/clickjacking/ip=https:%2f%2f192.168.0.124
The source code of that URL is attached in ATTACK_A0096034H.ZIP/attack_script

========== Class of Vulnerability: PHP Code injection (8) ========
* Goal: Print the server root path into main HTML using PHP code injection
* Exploit verification: the document root path is printed in the source code
* The exploit is partially automatable
* Exploit steps:
1) Go to Log in
username: user4@email.com
password: passw0rd
2) Go to Home > Edit my profile
3) Upload file named 1.png$_SERVER[DOCUMENT_ROOT] (located in ATTACK_A0096034H.zip)
4) Go to Home, view the source code
5) The remote IP address is printed in the HTML, such as:
src='/photos/1.png/home/student/repo/astrospace/public'  alt="..." style="width:100%; height: 120px" class="img-thumbnail"/

* Specify how to run attack automation tool:
Since the attack is only to upload a file, no automation is necessary

* Set up a malicious web application as a bait (if applicable)
Not necessary as we only need to upload a file

========== Class of Vulnerability: SQL Injection (7) ========
* Goal: Send new notification to anyone (even thought he/she is not a friend and not tagged in blog post)
* Exploit verification: new notification is sent even thought he/she is not tagged in any post
* The exploit is partially automatable
* Exploit steps:

Attacker:
1) Go to Log in:
username: user0@email.com
password: passw0rd
2) Go to Home > Memberlist,
3) Click the user name you want to attack (better to be the one that you are not friend with)
4) Now the URL should be something like: https://localhost/spaces/6
The last part is the user ID, copy that part
5) Go to Home > Create new post
6) Fill in the form as follow:
Title: 
injected notification", "http://www.evil.com", "2009-01-01", "2009-01-01"), (<id>, "Dummy title
=> Replace <id> with the user ID we just copied
Content: anything
Visible to: select user1
3) 2 notifications will be sent:
To user1:
- Title: injected notification
- URL: http://www.evil.com
- Updated_at: 2009-01-01
- Crated_at: 2009-01-01
To target user:
- TItle: Dummy title
- URL: http://192.168.0.124/blogposts/32

Victim:
1) Login as target user. Click Notifications on the top menu. You should see a notification from user0 (which is not your friend)

* Specify how to run attack automation tool:
Since the attack is only to post a blog post with malicios title, no automation is necessary
* Set up a malicious web application as a bait (if applicable)
Not needed
