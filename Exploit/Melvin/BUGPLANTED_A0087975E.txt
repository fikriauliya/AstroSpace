Bug Description Form 

Name: Yong Kuan Feng
Matric: A0087975E
GROUP : 18
APPLICATION : Astrospace

== Bug 1 ==

1. Class of vulnerabilities : Weak Password Checker

2. Specific configurations / settings (i.e settings on /etc/hosts file): 

3. Brief description : 

4. Bug Description: Password can be cracked easily as the current password checker only check for the password length during password creation. There is no limit of how many login attempts a user can try.
- Filename (if applicable): /repo/astrospace/app/models/Users.php
- Line number (if applicable): 11
- Variable name (if applicable): -
- Database table (if applicable): -
- Is exploit for this bug automatable? No
- Exploit for this bug runs successfully on : (Please tick)
  1. Chrome : Yes
  2. Firefox : Yes
  3. Internet Explorer : Yes


== Bug 2 ==

1. Class of vulnerabilities : Logic Authentication Flaw - Privilege Escalation (19)

2. Specific configurations / settings (i.e settings on /etc/hosts file): 

3. Brief description : We planted a bug that does not check on user's privilege that execute the button that delete a comment from a user. Currently, only admin users could do this operation on the admin area page.

4. Bug Description: If an admin forgets to logout/close the admin area page, a non-admin user could login and switch to the tab/window with the delete comment page and click on the button to execute the delete comment operation.
- Filename (if applicable): /repo/astrospace/controllers/AdminController.php
- Line number (if applicable): 6
- Variable name (if applicable): -
- Database table (if applicable): -
- Is exploit for this bug automatable? No
- Exploit for this bug runs successfully on : (Please tick)
  1. Chrome : Yes
  2. Firefox : Yes
  3. Internet Explorer : Yes


== Bug 3 ==

1. Class of vulnerabilities : Parameter Tempering (20)

2. Specific configurations / settings (i.e settings on /etc/hosts file): -

3. Brief description : The web application does not check for additional parameter being added to the back of the URL. An adversary could change the parameter and send message to a non-friend user.

4. Bug Description: Inspect the element of the dropdown box and under the content of the dropdown box, we can change the recipient to a non-friend user by changing the parameter of the option value to another user id who is not a friend.
- Filename (if applicable): -
- Line number (if applicable): -
- Variable name (if applicable): -
- Database table (if applicable): -
- Is exploit for this bug automatable? No
- Exploit for this bug runs successfully on : (Please tick)
  1. Chrome : Yes
  2. Firefox : Yes
  3. Internet Explorer : Yes

== Bug 4 ==

1. Class of vulnerabilities : Parameter Pollution (21)

2. Specific configurations / settings (i.e settings on /etc/hosts file): -

3. Brief description : Using the expected behavior of PHP/Apache application server, we could pollute the parameter by introduce another parameter at the back of the URL to change the behavior of the action. Currently we have planted a bug in changing a non-intended user's info by adding an additional parameter at the back of the URL. This is due to PHP only takes the last occurance of the parameter.

4. Bug Description: The bug changes the information of intended target from a non-intended target.
- Filename (if applicable): -
- Line number (if applicable): -
- Variable name (if applicable): -
- Database table (if applicable): -
- Is exploit for this bug automatable? No
- Exploit for this bug runs successfully on : (Please tick)
  1. Chrome : Yes
  2. Firefox : Yes
  3. Internet Explorer : Yes
